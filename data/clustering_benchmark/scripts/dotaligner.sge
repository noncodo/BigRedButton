#!/bin/bash
#$ -cwd                       	# Change to current working directory 
#$ -V                         	# Export environment variables into script 
#$ -S /bin/bash					# Enforce bash 

##################################################################################
#####
#####		DotAligner launcher for SGE queue management
#####
################################# SGE submission options  
TIMEFORMAT="%R"

echo -ne "[DEBUG]\t"$JOB_ID"\t"${SGE_TASK_ID}"\t"${HOSTNAME}"\t"`date`"\t" > $1/logs/dotalignerLog.${SGE_TASK_ID}
DABIN=$( which DotAligner ) 
SUBSET=$(ls ${1}/pairwise_groups/x* | sed ${SGE_TASK_ID}'q;d' )
echo -e "file: "`pwd`"$SUBSET"  >> $1/logs/dotalignerLog.${SGE_TASK_ID}

# remove files form previous runs (allows re-launching individual tasks)
if [[ -e $1/dotaligner/${SUBSET##*/}.dotaligner ||\
	  -e $1/dotaligner/${SUBSET##*/}.dotaligner.score ||\
	  -e $1/dotaligner/${SUBSET##*/}.dotaligner.time ]]; then rm $1/dotaligner/${SUBSET##*/}.* ; fi

cat $SUBSET | while read line ; do
 	echo ${line} | awk 'OFS="\t"{ printf $1"\t"$2"\t"}' >> $1/dotaligner/${SUBSET##*/}.dotaligner.score
 	F1=$( echo ${line} | awk 'OFS="\t"{ print $3}' ) 
 	F2=$( echo ${line} | awk 'OFS="\t"{ print $4}' ) 
 	
    OUT=$( { time ( $DABIN -d ${F1//ps/pp} -d ${F2//ps/pp} -o 1 -e 0.05 -t 0.5 -k 0.3 -s 1 -T 10  ) } \
    				2>> $1/dotaligner/${SUBSET##*/}.dotaligner.time |\
    				tee -a $1/dotaligner/${SUBSET##*/}.dotaligner |\
    				awk '{ print $1,$2,$5}' >> $1/dotaligner/${SUBSET##*/}.dotaligner.score   ) 

    if [[ ! -z "$OUT" ]] 
    	then echo $OUT  >> $1/locarna/${SUBSET##*/}.locarna.score 	
    	else echo "-0"  >> $1/locarna/${SUBSET##*/}.locarna.score
    fi 
done
echo -e "[DEBUG] Completed job "$JOB_ID":"${SGE_TASK_ID}" "`date` >> $1/logs/dotalignerLog.${SGE_TASK_ID}
echo -e "[DEBUG] "$(qstat -j ${JOB_ID} | grep usage | grep ${SGE_TASK_ID}: ) >> $1/logs/dotalignerLog.${SGE_TASK_ID}
