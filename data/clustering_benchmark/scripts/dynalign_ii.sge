#!/bin/bash
#$ -cwd                       	# Change to current working directory 
#$ -V                         	# Export environment variables into script 
#$ -S /bin/bash					# Enforce bash (don't touch!!!!)

TIMEFORMAT="%R"
TEMPDIR=/tmp/dynalign_ii
mkdir $TEMPDIR & cd $TEMPDIR   
#$SGE_O_WORKDIR  
# config file min contents
# inseq1 = RD0260.seq
# inseq2 = RD0500.seq
# outct = 1.ct
# outct2 = 2.ct
# aout = ali.ali

echo -ne "[DEBUG]\t"$JOB_ID"\t"${SGE_TASK_ID}"\t"${HOSTNAME}"\t"`date`"\t" >> $1/logs/dynalign_iiLog.${SGE_TASK_ID}
SUBSET=$(ls ${1}/pairwise_groups/x* | sed ${SGE_TASK_ID}'q;d' ) 
echo -e "file: "`pwd`"$SUBSET" >> $1/logs/dynalign_iiLog.${SGE_TASK_ID}

if [[ -e $1/dynalign_ii/${SUBSET##*/}.dynalign_ii ||\
	  -e $1/dynalign_ii/${SUBSET##*/}.dynalign_ii.score ||\
	  -e $1/dynalign_ii/${SUBSET##*/}.dynalign_ii.time ]]; then rm $1/dynalign_ii/${SUBSET##*/}.* ; fi

cat $SUBSET | while read line ; do
    line=${line//ps/fasta}
    line=${line//_dp/}
    echo "----------" >> $1/dynalign_ii/${SUBSET##*/}.dynalign_ii
    echo "ALIGNING	"$line >> $1/dynalign_ii/${SUBSET##*/}.dynalign_ii
    echo -en $line"\t" >> $1/dynalign_ii/${SUBSET##*/}.dynalign_ii.score
    cat > $TEMPDIR/${SGE_TASK_ID}.config << EOF
    # inseq1 = RD0260.seq
    # inseq2 = RD0500.seq
    # outct = 1.ct
    # outct2 = 2.ct
    # aout = ali.ali
    EOF


    OUT=$( { time ( dynalign_ii --noLP `echo ${line} | awk 'OFS="\t"{ print $3,$4}' ` ) } \
                2>> $1/dynalign_ii/${SUBSET##*/}.dynalign_ii.time |\
                tee -a $1/dynalign_ii/${SUBSET##*/}.dynalign_ii | grep Score | awk '{print $2}'  )
    
    if [[ ! -z "$OUT" ]] 
    	then echo $OUT  >> $1/dynalign_ii/${SUBSET##*/}.dynalign_ii.score 	
    	else echo "-0"  >> $1/dynalign_ii/${SUBSET##*/}.dynalign_ii.score
    fi 
done

echo -e "[DEBUG] Completed job "$JOB_ID":"${SGE_TASK_ID}"\t"`date` >> $1/logs/dynalign_iiLog.${SGE_TASK_ID}
echo -e "[DEBUG] "$(qstat -j ${JOB_ID} | grep usage | grep ${SGE_TASK_ID}: ) >> $1/logs/dynalign_iiLog.${SGE_TASK_ID}

